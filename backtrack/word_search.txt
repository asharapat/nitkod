Desc:
Given a 2-D grid of characters board and a string word, return true if the word is present in the grid, otherwise return false.
For the word to be present it must be possible to form it with a path in the board with horizontally or vertically neighboring cells. 
The same cell may not be used more than once in a word.

Solution:
def exist(self, board: List[List[str]], word: str) -> bool:
    - use dfs
    - if current cell is equal to current char, then:
        - proceed all other chars ((i+1,j), (i-1,j), (i,j+1), (i,j-1)), if they are inbound
        - substitute current cell with '#' -> to not consider it in neighbors recursion
        