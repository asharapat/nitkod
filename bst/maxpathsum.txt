Desc:
Given the root of a non-empty binary tree, return the maximum path sum of any non-empty path.
A path in a binary tree is a sequence of nodes where each pair of adjacent nodes has an edge connecting them. A node can not appear in the sequence more than once. The path does not necessarily need to include the root.
The path sum of a path is the sum of the node's values in the path.

Solution:
def maxPathSum(self, root: Optional[TreeNode]) -> int:
    - get leftMax and rightMax
    - if current node is parent:
        - check if node.val + leftMax + rightMax is potentially the max
    - if current node is child:
        - return max path like node.val + max(leftMax + rightMax)